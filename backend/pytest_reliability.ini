[tool:pytest]
# Pytest configuration for API reliability tests

# Test discovery
testpaths = .
python_files = test_api_reliability_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    --durations=20
    --disable-warnings
    --color=yes

# Markers for test categorization
markers =
    integration: Database failure integration tests
    load: Concurrent load and stress tests  
    chaos: Chaos engineering and resilience tests
    performance: Performance regression and benchmark tests
    smoke: Quick smoke tests for critical functionality
    slow: Tests that take longer than 30 seconds

# Timeout settings
timeout = 300
timeout_method = thread

# Parallel execution
-n = auto

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*urllib3.*:DeprecationWarning
    ignore:.*update_forward_refs.*:DeprecationWarning:gotrue.*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# JUnit XML output for CI/CD
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = false

# Coverage settings (optional)
# --cov=routes.dashboard
# --cov-report=term-missing
# --cov-report=html:htmlcov/reliability
# --cov-report=xml:coverage_reliability.xml
# --cov-fail-under=80